//
//  WalletWorker.swift
//  Nippfy
//
//  Created by Manuel Salvador del Águila on 18/03/2020.
//  Copyright (c) 2020 Manuel Salvador del Águila. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class WalletWorker
{
    
    var repository = Repository.getInstance()
    
    func doSomeWork()
    {
    }
    
    public func getBraintreeToken(completionHandler:  @escaping ((_ error: Error? ,_ braintreeToken: String) -> Void)) {
        repository.getBraintreeToken { (error, braintreeToken) in
            completionHandler(error, braintreeToken)
        }
    }
    
    public func performTransaction(request: Wallet.PerformTransaction.Request, completionHandler: @escaping ((_ error: Error?) -> Void)) {
        
        let nonce = request.nonce
        let amount = request.amount
        
        repository.performTransactionToWallet(nonce: nonce, amount: amount) { (error, transaction) in
            if let error = error {
                completionHandler(error)
                return
            } else {
                print("Transaction Completed ")
                // Save Transaction To Database
                
                guard let transaction = transaction else { return }
                self.repository.saveTransactionToDatabase(transaction: transaction) { (error) in
                    print("Transaction Saved To Database")
                    
                    if let error = error {
                        completionHandler(error)
                        return
                    } else {
                        // Update User Wallet and Nippfy Wallet
                        self.repository.addMoneyToUserAndNippfyWallet(transaction: transaction) { (error) in
                            
                            print("Money added to User and Nippfy Wallets")
                            completionHandler(error)
                        }
                    }
                }
            }
        }
    }
}
